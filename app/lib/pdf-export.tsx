// PDF export functionality using html2pdf.js

export const exportToPDF = async (planner) => {
  try {
    // Dynamically import html2pdf to avoid SSR issues
    const html2pdf = (await import("html2pdf.js")).default

    // Create HTML content for the PDF
    const htmlContent = createPDFContent(planner)

    // Configure PDF options
    const options = {
      margin: 1,
      filename: `${planner.title.replace(/[^a-z0-9]/gi, "_").toLowerCase()}_plan.pdf`,
      image: { type: "jpeg", quality: 0.98 },
      html2canvas: { scale: 2 },
      jsPDF: { unit: "in", format: "letter", orientation: "portrait" },
    }

    // Generate and download PDF
    html2pdf().set(options).from(htmlContent).save()
  } catch (error) {
    console.error("Error exporting PDF:", error)
    alert("Failed to export PDF. Please try again.")
  }
}

const createPDFContent = (planner) => {
  const progress = calculateProgress(planner.tasks)
  const dueDate = new Date(planner.dueDate).toLocaleDateString()

  return `
    <div style="font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px;">
      <div style="text-align: center; margin-bottom: 30px; border-bottom: 2px solid #3b82f6; padding-bottom: 20px;">
        <h1 style="color: #1f2937; margin-bottom: 10px;">ðŸ“š ${planner.title}</h1>
        <p style="color: #6b7280; font-size: 16px;">Assignment Plan Generated by EssayPlanner AI</p>
        <p style="color: #6b7280; font-size: 14px;">Generated on: ${new Date().toLocaleDateString()}</p>
      </div>
      
      <div style="margin-bottom: 30px;">
        <h2 style="color: #1f2937; border-bottom: 1px solid #e5e7eb; padding-bottom: 10px;">Assignment Overview</h2>
        <div style="background-color: #f9fafb; padding: 20px; border-radius: 8px; margin: 15px 0;">
          <p><strong>Due Date:</strong> ${dueDate}</p>
          <p><strong>Progress:</strong> ${progress}% Complete</p>
          ${planner.wordCount ? `<p><strong>Target Word Count:</strong> ${planner.wordCount} words</p>` : ""}
          <p><strong>Topic:</strong></p>
          <p style="margin-left: 20px; line-height: 1.6;">${planner.topic}</p>
        </div>
      </div>
      
      <div style="margin-bottom: 30px;">
        <h2 style="color: #1f2937; border-bottom: 1px solid #e5e7eb; padding-bottom: 10px;">Task Breakdown</h2>
        ${planner.tasks
          .map(
            (task, index) => `
          <div style="margin: 20px 0; padding: 20px; border: 1px solid #e5e7eb; border-radius: 8px; ${task.completed ? "background-color: #f0fdf4;" : ""}">
            <div style="display: flex; align-items: center; margin-bottom: 10px;">
              <span style="font-size: 18px; margin-right: 10px;">${task.completed ? "âœ…" : "â­•"}</span>
              <h3 style="margin: 0; color: #1f2937; ${task.completed ? "text-decoration: line-through; color: #6b7280;" : ""}">${task.name}</h3>
            </div>
            
            ${task.description ? `<p style="margin: 10px 0; line-height: 1.6; color: #374151;">${task.description}</p>` : ""}
            
            <div style="margin: 15px 0; padding: 10px; background-color: #f3f4f6; border-radius: 4px;">
              <p style="margin: 5px 0; font-size: 14px;"><strong>Start Date:</strong> ${new Date(task.startDate).toLocaleDateString()}</p>
              <p style="margin: 5px 0; font-size: 14px;"><strong>End Date:</strong> ${new Date(task.endDate).toLocaleDateString()}</p>
            </div>
            
            ${
              task.tip && planner.showTips
                ? `
              <div style="margin-top: 15px; padding: 15px; background-color: #dbeafe; border-left: 4px solid #3b82f6; border-radius: 4px;">
                <p style="margin: 0; font-size: 14px; color: #1e40af;"><strong>ðŸ’¡ Writing Tip:</strong></p>
                <p style="margin: 5px 0 0 0; font-size: 14px; line-height: 1.5; color: #1e40af;">${task.tip}</p>
              </div>
            `
                : ""
            }
          </div>
        `,
          )
          .join("")}
      </div>
      
      <div style="margin-top: 40px; padding-top: 20px; border-top: 1px solid #e5e7eb; text-align: center;">
        <p style="color: #6b7280; font-size: 12px;">Generated by EssayPlanner AI - Your AI-Powered Assignment Assistant</p>
        <p style="color: #6b7280; font-size: 12px;">Visit us at essayplanner.ai for more planning tools</p>
      </div>
    </div>
  `
}

const calculateProgress = (tasks) => {
  if (!tasks || tasks.length === 0) return 0
  const completed = tasks.filter((task) => task.completed).length
  return Math.round((completed / tasks.length) * 100)
}
